{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "getOneUser",
        "summary": "Returning information about user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "postUser",
        "summary": "Creating new user in db",
        "tags": [
          "User"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchUser",
        "summary": "Updating user data",
        "tags": [
          "User"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/v1/feedback_notes/daily_limits/{id}": {
      "get": {
        "operationId": "getFeedbackDailyLimits",
        "summary": "Returning information about feedback daily limits by user",
        "tags": [
          "Feedback"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback daily limits by user has been calculated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback_notes/count": {
      "get": {
        "operationId": "getFeedbackCount",
        "summary": "Returning information about feedback count by feedback status",
        "tags": [
          "Feedback"
        ],
        "parameters": [
          {
            "name": "start",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback count by status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackCountResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback_notes/{id}": {
      "get": {
        "operationId": "getOneFeedbackNote",
        "summary": "Returning information about feedback note",
        "tags": [
          "Feedback"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback note has been found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackEntity"
                }
              }
            }
          },
          "404": {
            "description": "Feedback note not found."
          }
        }
      }
    },
    "/api/v1/feedback_notes": {
      "get": {
        "operationId": "getFeedbackNotes",
        "summary": "Returning information about feedback notes",
        "tags": [
          "Feedback"
        ],
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "support_id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback notes has been found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackEntity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postFeedbackNote",
        "summary": "Creating new feedback note in db",
        "tags": [
          "Feedback"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback note has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackEntity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchFeedbackNote",
        "summary": "Updating feedback note data",
        "tags": [
          "Feedback"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback note has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackEntity"
                }
              }
            }
          },
          "404": {
            "description": "Feedback note not found."
          }
        }
      }
    }
  },
  "info": {
    "title": "Bot Server",
    "description": "The Bot Server API description",
    "version": "3.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "firstname": {
            "type": "string",
            "example": "Ivan",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "example": "Ivanov",
            "nullable": true
          },
          "username": {
            "type": "string",
            "example": "sergei_zheludkov",
            "nullable": true
          },
          "who_invited": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserEntity"
              }
            ]
          },
          "referral_counter": {
            "type": "number",
            "example": 5
          },
          "lang": {
            "type": "string",
            "enum": [
              "ru",
              "en"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "support",
              "affiliate",
              "user"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "nullable": true
          },
          "timezone": {
            "type": "number",
            "example": 600,
            "nullable": true
          },
          "reminder_time": {
            "type": "number",
            "example": 600
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "updated": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "firstname",
          "lastname",
          "username",
          "who_invited",
          "referral_counter",
          "lang",
          "role",
          "gender",
          "timezone",
          "reminder_time",
          "created",
          "updated"
        ]
      },
      "UserCreateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "firstname": {
            "type": "string",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "example": "Ivanov"
          },
          "username": {
            "type": "string",
            "example": "sergei_zheludkov"
          },
          "who_invited_id": {
            "type": "string",
            "nullable": true,
            "example": "1269959930"
          },
          "lang": {
            "type": "string",
            "enum": [
              "ru",
              "en"
            ]
          },
          "gender": {
            "type": "string",
            "nullable": true,
            "enum": [
              "male",
              "female"
            ]
          },
          "timezone": {
            "type": "number",
            "example": 600
          }
        },
        "required": [
          "id",
          "lang"
        ]
      },
      "UserUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "firstname": {
            "type": "string",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "example": "Ivanov"
          },
          "username": {
            "type": "string",
            "example": "sergei_zheludkov"
          },
          "referral_counter": {
            "type": "number",
            "example": 5
          },
          "lang": {
            "type": "string",
            "enum": [
              "ru",
              "en"
            ]
          },
          "reminder_time": {
            "type": "number",
            "example": 600
          },
          "timezone": {
            "type": "number",
            "example": 600
          }
        },
        "required": [
          "id"
        ]
      },
      "FeedbackCountResponseDto": {
        "type": "object",
        "properties": {
          "waiting": {
            "type": "number",
            "example": 10
          },
          "processing": {
            "type": "number",
            "example": 4
          },
          "done": {
            "type": "number",
            "example": 3
          }
        }
      },
      "FeedbackFilesEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "AgACAgIAAxkBAAIVb2VOFv4Imec7PVIve4JdiQABQCRSegACDdgxG5ERcEr65sylfrcRDgEAAwIAA3MAAzME"
          },
          "type": {
            "type": "string",
            "enum": [
              "file",
              "audio",
              "voice",
              "image",
              "video",
              "video_note"
            ]
          },
          "feedback_id": {
            "type": "string",
            "example": "13600338317425362"
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "updated": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "type",
          "feedback_id",
          "created",
          "updated"
        ]
      },
      "FeedbackEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "13600338317425362"
          },
          "text": {
            "type": "string",
            "example": "I am writing to request your assistance concerning the matter of ... I hope that my request will not inconvenience you too much.",
            "nullable": true
          },
          "feedback_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedbackFilesEntity"
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "support": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserEntity"
              }
            ]
          },
          "comment": {
            "type": "string",
            "example": "Created task for development",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "file",
              "voice",
              "audio",
              "image",
              "video",
              "video_note",
              "media_group",
              "sticker"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "processing",
              "done"
            ]
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "updated": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "text",
          "feedback_files",
          "user",
          "support",
          "comment",
          "type",
          "status",
          "created",
          "updated"
        ]
      },
      "FeedbackFilesCreateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "AgACAgIAAxkBAAIVb2VOFv4Imec7PVIve4JdiQABQCRSegACDdgxG5ERcEr65sylfrcRDgEAAwIAA3MAAzME"
          },
          "type": {
            "type": "string",
            "enum": [
              "file",
              "audio",
              "voice",
              "image",
              "video",
              "video_note"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "FeedbackCreateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "13600338317425362"
          },
          "text": {
            "type": "string",
            "example": "I am writing to request your assistance concerning the matter of ... I hope that my request will not inconvenience you too much."
          },
          "feedback_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedbackFilesCreateDto"
            }
          },
          "user_id": {
            "type": "string",
            "example": "258000010"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "file",
              "voice",
              "audio",
              "image",
              "video",
              "video_note",
              "media_group",
              "sticker"
            ]
          }
        },
        "required": [
          "id",
          "user_id",
          "type"
        ]
      },
      "FeedbackUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "13600338317425362"
          },
          "support_id": {
            "type": "string",
            "example": "258000010"
          },
          "text": {
            "type": "string",
            "example": "Created task for development"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "processing",
              "done"
            ]
          }
        },
        "required": [
          "id",
          "status"
        ]
      }
    }
  }
}